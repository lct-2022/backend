(uiop:define-package #:platform/team/api
  (:use #:cl)
  (:import-from #:openrpc-server
                #:define-rpc-method)
  (:import-from #:platform/api
                #:platform-api)
  (:import-from #:platform/team/model
                #:team)
  (:import-from #:common/db
                #:with-connection)
  (:import-from #:platform/job/api
                #:create-job)
  (:import-from #:random-sample
                #:random-sample)
  (:import-from #:serapeum
                #:fmt))
(in-package #:platform/team/api)


(defparameter *default-jobs*
  (list (list "Бэкендер" "Требуются навыки разработки микросервисов + немного devop. Знание баз данных.")
        (list "Фронтендер" "Необходимо владеть React и Typescript.")
        (list "Дизайнер" "UX & UI.")
        (list "Маркетолог" "Тут должны быть разные маркетинговые баззворды.")))


;; На этапе MVP мы генерируем рандомные примеры вакансий для наполнения сайта.
(defparameter *job-titles* (list "Android разработчик"
                                 "Маркетолог и PR"
                                 "Дизайнер UX/UI"
                                 "Художник-иллюстратор"
                                 "Завхоз"
                                 "Data Scientist"
                                 "Backend developer"
                                 "Фронтендер"))

(defparameter *duties*
  (list "- Разработка программного обеспечения"
        "- Разработка портальных решений, прикладных приложений."
        "- Исследование и анализ тех. требований к программному продукту;"
        "- Разработка архитектуры и программных модулей приложений;"
        "- Тестирование и отладка программного кода;"
        "- Техническая поддержка приложений, консультации Заказчика"
        "- Разработка и реализация маркетинговой и PR-стратегии продвижения бренда;"
        "- Проведение исследования и анализа рынка и исследование конкурентов в EdTech: ключевые особенности продуктов, фичи, поддержка, клиенты, объемы продаж;"
        "- Формирование и реализация плана и бюджета B2B-маркетинговых активностей; Выявление Jobs To Be Done; Взаимодействие с подрядчиками: брифинг, координация и контроль работы (нейминг, брендинг, стратегия, рекламная кампания, digital-реклама, SEO-оптимизация и тд);"
        "- Подготовка и запуск лидогенерирующей рекламной кампании;"
        "- SEO-продвижение: анализ семантического ядра, подбор ключевых слов, теги в блоге, подключение многоканального номера;"
        "- Работа с инфоповодами: поиск и подготовка тем, факт-чекинг, написание фактуры для публикаций;"
        "- Интеграция бренда в медиа, подготовка пресс-релизов и информационных материалов для СМИ,"
        "- Работа с селебрити, инфлюенсерами, блогерами, стилистами, прессой и ТВ, в том числе и с зарубежными."
        "- Анализ эффектвности маркетинговых и PR-коммуникаций, формирование отчетности."
        "- Отвечать за UI/UX дизайн интерфейса приложения."
        "- Регулярно улучшать процесс разработки продукта UED."
        "- Проводить исследования стилей интерфейса продукта и анализ тенденций дизайна (включая веб-сайты и приложения)."
        "- Производство функциональных модулей динамических эффектов и динамических демонстраций"
        "- Участвовать в формулировании спецификаций дизайна, выдвигать инновационные идеи и постоянно оптимизировать работу пользователей с продуктом."
        "- Объединение данных, сравнительного анализа продуктов, исследований пользователей и других возможностей для проведения комплексного анализа для разработки эффективных решений."
        "- Разработка расчетных моделей."
        "- Подготовка и преобразование данных для обучения и тестирования."
        "- Участие в реализации оптимизационных алгоритмов."
        "- Разработка архитектуры модели."
        "- Проектирование архитектуры баз данных;"
        "- Разработка и поддержка продукта на ASP.NET Core;"
        "- Автоматизация тестирования;"
        "- Оптимизация технических и архитектурных решений;"
        "- Контроль соблюдения качества кода, проведение CodeReview;"
        "- Документирование кода;"
        "- Интеграция с внешними/внутренними системами и сервисам."))


(defparameter *conditions*
  (list "- Уровень зарплаты обсуждается с каждым кандидатом индивидуально."
        "- Оформление с первого рабочего дня, официальная зарплата."
        "- Различные программы ДМС"
        "- Гибридный формат работы (офис/дом)"
        "- Комфортный офис в шаговой доступности от метро"
        "- Гибкое начало рабочего дня"
        "- Курсы английского языка"
        "- Работа по графику: 5 дней в неделе в офисе компании,"
        "- Оклад и бонусы при выполнении плана работ."
        "- Карт-бланш на реализацию твоих идей, свободу действий и доступ к ресурсам;"
        "- Возможность сформировать собственную команду (нанимать сотрудников к себе в юнит, привлекать подрядчиков), большой маневр для развития и реализации экспертизы;"
        "- Оформление по ТК РФ, полностью белая ЗП, прозрачная система бонусов;"
        "- Гибридный формат, свободное начало дня;"
        "- Расширенный ДМС (со стоматологией), английский язык, 50% оплата дополнительного обучения по профессии, крутые корпоративы."
        "- Участие в хатоне."
        "- Проработка идеи."))


(defun random-in-range (from to)
  (+ from (random (1+ (- to from)))))

(defun generate-random-job ()
  (let ((title (first (random-sample *job-titles* 1)))
        (duties (random-sample *duties*
                               ;; От 3 до 7 обязанностей
                               (random-in-range 3 7)
                               :with-replacement nil))
        (conditions (random-sample *conditions*
                                   ;; От 3 до 5 условий работы
                                   (random-in-range 3 5)
                                   :with-replacement nil)))
    (list title
          (fmt "Требования:~2%~{~A~^~%~}~3%Условия:~2%~{~A~^~%~}"
               duties
               conditions))))


(define-rpc-method (platform-api create-team) (project-id title)
  (:summary "Создаёт ещё одну команду внутри проекта.")
  (:description "Пока нам это не нужно, для каждого проекта создаётся дефолтная команда. Однако в будущем, может быть будет необходимо создавать по несколько команд для работы над большими проектами.

Чтобы создать команду, надо быть владельцем проекта или админом.")
  (:param title string)
  (:param project-id integer)
  (:result team)

  (with-connection ()
    (let* ((team (mito:create-dao 'team
                                  :title title
                                  :project-id project-id))
           (team-id (mito:object-id team)))
      ;; Добавим команде от 3 до 5 вакансий
      (loop repeat (random-in-range 3 5)
            for (title description) = (generate-random-job)
            do (create-job team-id title description))
      team)))


(define-rpc-method (platform-api get-project-teams) (project-id)
  (:summary "Отдаёт список команд для проекта.")
  (:param project-id integer)
  (:result (list-of team))

  (with-connection ()
    (mito:select-dao 'team
      ;; Сейчас это не работает для get-project-team - проект не раскрывается CL клиентом, но на фронте должно быть OK.
      ;; Пока не нужно. поэтому закомментировано
      ;; (mito:includes 'platform/project/model::project)
      (sxql:where (:= :project-id project-id)))))
