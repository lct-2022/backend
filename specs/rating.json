{
  "methods": [
    {
      "name": "rpc.discover",
      "params": [],
      "result": {
        "name": "OpenRPC Schema",
        "schema": {
          "$ref": "https://raw.githubusercontent.com/open-rpc/meta-schema/master/schema.json"
        }
      }
    },
    {
      "name": "vote",
      "params": [
        {
          "name": "subject_type",
          "schema": {
            "type": "string"
          },
          "required": true,
          "summary": "Тип объекта: project или user."
        },
        {
          "name": "subject_id",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "summary": "ID объекта."
        }
      ],
      "result": {
        "name": "vote_result",
        "schema": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "object",
              "properties": {},
              "required": [],
              "x-cl-class": "T",
              "x-cl-package": "COMMON-LISP"
            },
            "updated_at": {
              "type": "object",
              "properties": {},
              "required": [],
              "x-cl-class": "T",
              "x-cl-package": "COMMON-LISP"
            },
            "synced": {
              "type": "boolean"
            },
            "id": {
              "type": "integer"
            },
            "user_id": {
              "type": "integer"
            },
            "subject_type": {
              "type": "string",
              "description": "Тип объекта, за который оставлен голос. В базе это ENUM (project, user)"
            },
            "subject_id": {
              "type": "integer",
              "description": "ID объекта, за который оставлен голос."
            }
          },
          "required": [
            "subject_id",
            "subject_type",
            "user_id",
            "id",
            "updated_at",
            "created_at"
          ],
          "x-cl-class": "VOTE",
          "x-cl-package": "RATING/VOTE/MODEL",
          "description": "Запись о голосе конкретного участника за какую-то сущность в нашей системе."
        }
      },
      "summary": "Оставляет голос от текущего пользователя за объект с указанным типом и id.",
      "paramStructure": "by-name"
    },
    {
      "name": "get_vote",
      "params": [
        {
          "name": "subject_type",
          "schema": {
            "type": "string"
          },
          "required": true,
          "summary": "Тип объекта: project или user."
        },
        {
          "name": "subject_id",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "summary": "ID объекта."
        }
      ],
      "result": {
        "name": "get_vote_result",
        "schema": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "object",
              "properties": {},
              "required": [],
              "x-cl-class": "T",
              "x-cl-package": "COMMON-LISP"
            },
            "updated_at": {
              "type": "object",
              "properties": {},
              "required": [],
              "x-cl-class": "T",
              "x-cl-package": "COMMON-LISP"
            },
            "synced": {
              "type": "boolean"
            },
            "id": {
              "type": "integer"
            },
            "user_id": {
              "type": "integer"
            },
            "subject_type": {
              "type": "string",
              "description": "Тип объекта, за который оставлен голос. В базе это ENUM (project, user)"
            },
            "subject_id": {
              "type": "integer",
              "description": "ID объекта, за который оставлен голос."
            }
          },
          "required": [
            "subject_id",
            "subject_type",
            "user_id",
            "id",
            "updated_at",
            "created_at"
          ],
          "x-cl-class": "VOTE",
          "x-cl-package": "RATING/VOTE/MODEL",
          "description": "Запись о голосе конкретного участника за какую-то сущность в нашей системе."
        }
      },
      "summary": "Возвращает объект Vote, если текущий пользователь уже голосовал за объект.",
      "paramStructure": "by-name"
    },
    {
      "name": "get_rating",
      "params": [
        {
          "name": "subject_type",
          "schema": {
            "type": "string"
          },
          "required": true,
          "summary": "Тип объекта: project или user."
        },
        {
          "name": "subject_id",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "summary": "ID объекта."
        }
      ],
      "result": {
        "name": "get_rating_result",
        "schema": {
          "type": "integer"
        }
      },
      "summary": "Возвращает рейтинг объекта (количество голосов за него).",
      "paramStructure": "by-name"
    },
    {
      "name": "get_ratings",
      "params": [
        {
          "name": "subject_type",
          "schema": {
            "type": "string"
          },
          "required": true,
          "summary": "Тип объекта: project или user."
        },
        {
          "name": "subject_ids",
          "schema": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "required": true,
          "summary": "ID объектов."
        }
      ],
      "result": {
        "name": "get_ratings_result",
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "summary": "Возвращает рейтинги объектов.",
      "paramStructure": "by-name"
    },
    {
      "name": "get_top",
      "params": [
        {
          "name": "subject_type",
          "schema": {
            "type": "string"
          },
          "required": true,
          "summary": "Тип объекта: project или user."
        },
        {
          "name": "limit",
          "schema": {
            "type": "integer"
          },
          "summary": "Максимальное количество объектов в топе. По умолчанию 10."
        }
      ],
      "result": {
        "name": "get_top_result",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "synced": {
                "type": "boolean"
              },
              "subject_type": {
                "type": "string",
                "description": "Тип объекта, за который оставлен голос. В базе это ENUM (project, user)"
              },
              "subject_id": {
                "type": "integer",
                "description": "ID объекта, из TOP."
              },
              "rating": {
                "type": "integer",
                "description": "Рейтинг объекта (пока это просто количество голосов за него)."
              }
            },
            "required": [
              "rating",
              "subject_id",
              "subject_type"
            ],
            "x-cl-class": "TOP-ITEM",
            "x-cl-package": "RATING/VOTE/MODEL",
            "description": "Представляет собой ссылку на объект из топа + его рейтинг."
          }
        }
      },
      "summary": "Возвращает N объектов с наивысшим рейтингом в своей категории.",
      "paramStructure": "by-name"
    }
  ],
  "openrpc": "1.0.0",
  "info": {
    "title": "Rating API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "name": "default",
      "url": "https://localhost/"
    }
  ]
}